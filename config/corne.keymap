#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 29>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 21>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <26 27>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <31 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };
    };

    //

    macros {
        Vim_EOL: Vim_EOL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &kp G>;
            label = "VIM_EOL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp B               &kp L           &kp D           &kp W             &kp Z                         &kp SINGLE_QUOTE             &kp F              &kp O            &kp U            &kp J                &trans
&trans  &hm LEFT_CONTROL N  &hm LEFT_ALT R  &hm LEFT_GUI T  &hm LEFT_SHIFT S  &hm LS(LA(LC(LEFT_GUI))) G    &hm RS(RA(RC(RIGHT_GUI))) Y  &hm RIGHT_SHIFT H  &hm RIGHT_GUI A  &hm RIGHT_ALT E  &hm RIGHT_CONTROL I  &trans
&trans  &kp Q               &kp X           &kp M           &kp C             &hm LS(LA(LEFT_CONTROL)) V    &hm RS(RA(RIGHT_CONTROL)) K  &kp P              &kp COMMA        &kp DOT          &mt SEMI SLASH       &trans
                                            &lt 6 TAB       &lt 2 ENTER       &lt 3 ESCAPE                  &lt 5 BACKSPACE              &lt 4 SPACE        &lt 7 C_REPEAT
            >;
        };

        Qwerty {
            display-name = "Qwerty Layer";
            bindings = <
&trans  &kp Q               &kp W           &kp E           &kp R             &kp T                         &kp Y                        &kp U              &kp I            &kp O            &kp P                           &trans
&trans  &hm LEFT_CONTROL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &hm LS(LA(LC(LEFT_GUI))) G    &hm RS(RA(RC(RIGHT_GUI))) H  &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RIGHT_CONTROL SINGLE_QUOTE  &trans
&trans  &kp Z               &kp X           &kp C           &kp V             &kp B                         &kp N                        &kp M              &kp COMMA        &kp DOT          &mt SEMI SLASH                  &trans
                                            &lt 2 TAB       &lt 2 ENTER       &lt 2 ESCAPE                  &lt 2 BACKSPACE              &lt 0 SPACE        &lt 5 C_REPEAT
            >;
        };

        Symbols {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp EXCL      &kp AT      &kp HASH            &kp DOLLAR    &kp PERCENT    &kp CARET                  &kp AMPS              &kp ASTRK              &none     &none         &none
&none  &kp GRAVE     &kp UNDER   &kp MINUS           &kp LS(PLUS)  &kp EQUAL      &kp LBKT                   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RBKT  &kp COLON     &none
&none  &kp CAPSLOCK  &caps_word  &kp K_CONTEXT_MENU  &none         &kp PIPE       &kp FSLH                   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BSLH  &kp QUESTION  &none
                                 &none               &none         &none          &kp LS(LA(LC(LG(SPACE))))  &kp LG(SPACE)         &kp LS(LA(LC(SPACE)))
            >;
        };

        Media {
            bindings = <
&none  &none                 &kp C_REWIND          &kp C_PLAY    &kp C_FAST_FORWARD  &none                      &kp PAGE_UP       &kp HOME          &kp UP            &kp END            &none  &none
&none  &kp LEFT_CONTROL      &kp LALT              &kp LGUI      &kp LSHFT           &kp LS(LC(LA(LGUI)))       &kp PAGE_DOWN     &kp LEFT          &kp DOWN          &kp RIGHT          &none  &none
&none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOL_DN  &kp C_VOLUME_UP     &mt LS(LC(LALT)) C_MUTE    &kp LG(LA(LEFT))  &kp LS(LG(LBKT))  &kp LS(LG(RBKT))  &kp LG(LA(RIGHT))  &none  &none
                                                   &none         &none               &none                      &kp LG(LEFT)      &kp LG(RIGHT)     &none
            >;

            label = "Media and Navigations";
        };

        Mouse {
            bindings = <
&none  &none      &none           &mmv MOVE_UP    &none            &none          &none  &msc SCRL_UP    &kp LS(LA(LC(SPACE)))  &msc SCRL_DOWN   &none  &none
&none  &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none          &none  &mkp LCLK       &mkp MCLK              &mkp RCLK        &none  &none
&none  &kp LCTRL  &kp LALT        &kp LGUI        &kp LSHFT        &none          &none  &msc SCRL_LEFT  &none                  &msc SCRL_RIGHT  &none  &none
                                  &none           &kp LG(TAB)      &kp LA(TAB)    &none  &none           &none
            >;
        };

        Sys {
            display-name = "System";
            bindings = <
&none  &none  &kp LS(LC(LA(LG(N4))))  &kp LS(LC(LA(LG(N5))))  &kp LS(LC(LA(LG(N6))))  &none                      &none         &none         &none         &none         &none         &none
&none  &none  &kp LS(LC(LA(LG(N1))))  &kp LS(LC(LA(LG(N2))))  &kp LS(LC(LA(LG(N3))))  &studio_unlock             &none         &none         &to 1         &to 0         &none         &none
&none  &none  &kp F16                 &kp UP                  &kp DOWN                &none                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
                                      &none                   &kp LS(LC(LA(RET)))     &kp LC(LA(LG(LS(RET))))    &none         &none         &none
            >;
        };

        Numpad {
            bindings = <
&none  &none      &none     &none     &none      &none                       &kp LS(PLUS)  &kp N7  &kp N8     &kp N9  &none      &none
&none  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &kp LS(LC(LA(LEFT_GUI)))    &kp MINUS     &kp N4  &kp N5     &kp N6  &kp SPACE  &none
&none  &none      &none     &none     &none      &kp LS(LA(LEFT_CONTROL))    &kp EQUAL     &kp N1  &kp N2     &kp N3  &kp FSLH   &none
                            &none     &none      &none                       &kp DOT       &kp N0  &kp COMMA
            >;
        };

        Fn {
            bindings = <
&none  &none      &none      &none  &none      &none           &kp F12  &kp F7  &kp F8  &kp F9  &none  &none
&none  &kp N0     &kp CARET  &none  &Vim_EOL   &kp LS(DLLR)    &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&none  &kp LC(B)  &kp LC(U)  &none  &kp LC(D)  &kp LC(F)       &kp F10  &none   &kp F2  &kp F3  &none  &none
                             &none  &none      &none           &none    &none   &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
